syntax = "proto3";

import "google/protobuf/empty.proto";

package guru.qa.grpc.rangiffler;

service UserService {
  rpc GetAllUsers (LinkedUsersByUsernameRequest) returns (UsersPageableResponse) {}
  rpc GetUserByUsername (UserByUsernameRequest) returns (UserByUsernameResponse) {}
  rpc GetFriends(LinkedUsersByUsernameRequest) returns (UsersPageableResponse) {}
  rpc GetIncomeInvitations(LinkedUsersByUsernameRequest) returns (UsersPageableResponse) {}
  rpc GetOutcomeInvitations(LinkedUsersByUsernameRequest) returns (UsersPageableResponse) {}
  rpc UpdateUser(UserAbout) returns (User) {}
  rpc IdentityFriendship(FriendshipAbout) returns (User) {}
}


message UserByUsernameRequest {
  string username = 1;
}

message UserByUsernameResponse {
  User user = 1;
}

message User {
  string id = 1;
  string username = 2;
  string firstname = 3;
  string surname = 4;
  string avatar = 5;
  FriendsStatus friendStatus = 6;
  UsersPageableResponse friends = 7;
  UsersPageableResponse incomeInvitations = 8;
  UsersPageableResponse outcomeInvitations = 9;
  string countryId = 10;
}

enum FriendsStatus {
  UNSPECIFIED = 0;
  NOT_FRIEND = 1;
  INVITATION_SENT = 2;
  INVITATION_RECEIVED = 3;
  FRIEND = 4;
}

message PageableRequest {
  string searchQuery = 1;
  int32 page = 2;
  int32 size = 3;
}

message UsersPageableResponse {
  repeated User users = 1;
  bool hasNext = 2;
}

message LinkedUsersByUsernameRequest {
  string username = 1;
  PageableRequest pageInfo = 2;
}

message UserAbout {
  string username = 1;
  string firstname = 2;
  string surname = 3;
  string avatar = 4;
  string countryId = 5;
}

message FriendshipAbout {
  string requesterUsername = 1;
  string addresseeId = 2;
  FriendshipAction friendshipAction = 3;
}

enum FriendshipAction {
  ADD = 0;
  ACCEPT = 1;
  REJECT = 2;
  DELETE = 3;
}

